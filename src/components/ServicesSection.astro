---
// src/components/ServicesSection.astro

interface ServiceItem {
  title: string;
  description: string;
}

const services: ServiceItem[] = [
  {
    title: "Design Consulting",
    description:
      "Transform brand identity and packaging with strategic and creative design solutions. From concept to execution, ensure a compelling visual presence that captivates and drives success.",
  },
  {
    title: "Branding Packaging",
    description:
      "Crafting distinctive brand identities and packaging that captivate, connect, and elevate. Blending creativity and functionality, every detail—from logo design to visual communications and packaging solutions—is thoughtfully designed for impact, recognition, and lasting impressions.",
  },
  {
    title: "Illustration",
    description:
      "Tailoring a diverse range of creative and contemporary illustration styles to meet customer needs and specific usage scenarios, crafted meticulously from initial sketches to fully realized final pieces.",
  },
  {
    title: "Motion Graphic Video Editing",
    description:
      "From concept to final animation, handling tasks such as illustration, storyboard, and 2D animation using tools like After Effects and DaVinci Resolve. Working on various formats including digital advertising, social media posts, and animated motion design videos.",
  },
  {
    title: "Chinese Market Needs",
    description:
      "Brand strategy, graphic design, and art direction tailored to the Chinese market, with seamless project management and communication. Facilitating translation between Chinese, English, and French to ensure clear and effective collaboration.",
  },
];

export interface Props {
  title?: string;
  serviceItems?: ServiceItem[];
}

const { title = "Services", serviceItems = services } = Astro.props;
---

<section class="services-section">
  <div class="container">
    <h2 class="section-title">{title}</h2>
    <div class="services-list">
      {
        serviceItems.map((service) => (
          <div class="service-item">
            <h3 class="service-item-title">{service.title}</h3>
            <p class="service-item-description">{service.description}</p>
          </div>
        ))
      }
    </div>
  </div>
</section>

<style>
  .services-section {
    padding: calc(var(--spacing-unit, 8px) * 6) 0;
    background-color: var(--section-bg, #fff); /* Figma: White background */
  }
  
  .section-title {
    font-family: "Brawler", var(--font-family-heading); /* Figma: Brawler */
    font-size: 14px; /* Figma: 14px. Consider if this is too small, Astro was clamp(1.8rem, 4vw, 2.5rem) */
    text-align: left;
    width: 100%;
    border-bottom: 1px solid var(--text-color, #000); /* Figma: Black line */
    padding-bottom: calc(var(--spacing-unit, 8px) * 1);
    margin-bottom: calc(var(--spacing-unit, 8px) * 6);
    color: var(--text-color, #000); /* Assuming black from Figma */
    text-transform: none; /* Figma data does not show uppercase for the main title */
    letter-spacing: 0.05em; /* Retained from original, review if needed */
  }

  .services-list {
    display: grid;
    grid-template-columns: 1fr;
    gap: calc(var(--spacing-unit, 8px) * 4);
    max-width: 75%;
    text-align: center; /* This centers the grid container if it's narrower than parent */
    margin: 10rem auto;
  }

  @media (min-width: var(--breakpoint-md, 768px)) {
    .services-list {
      grid-template-columns: 1fr; /* Still one column as per current logic */
    }
  }

  .service-item {
    display: grid;
    grid-template-columns: clamp(160px, 22%, 220px) auto; /* Responsive title column width */
    gap: calc(var(--spacing-unit, 8px) * 4); /* Adjust based on Figma spacing */
    align-items: start;
    justify-content: space-between;
    text-align: left;
  }

  .service-item-title {
    font-family: "Monument Grotesk", var(--font-family-sans-serif); /* Figma: Monument Grotesk */
    font-size: 1.25rem; /* Figma: 20px */
    font-weight: 700; /* Figma: Bold */
    margin-bottom: calc(var(--spacing-unit, 8px) * 0.5);
    color: var(--text-color, #000); /* Figma: Black */
    line-height: 1.2; /* Figma: 24px line height for 20px font */
  }

  .service-item-description {
    font-family: "Roboto Mono", var(--font-family-sans-serif); /* Figma: Roboto Mono */
    font-size: 14px; /* Figma: 14px */
    line-height: 1.7; /* Figma: 24px line height for 14px font (~1.71) - good match */
    color: var(--text-color, #000); /* Figma: Black */
    max-width: 640px;
  }
</style>
